package kinnn;

public class S508 {

	public static void main(String[] args) {
		//質問８︓LV10のパスカルの三⾓形を出⼒してください。
		/*
	               y(0) y(1) y(2) y(3) y(4) y(5) 
	
        x(0)       1
        x(1)	   1    1
        x(2)	   1    2     1
        x(3)	   1    3     3    1
        x(4)	   1    4     6    4    1
        x(5)       1    5     10   10   5    1 


        x(n)==>y(n),n同じ
        xのｙ(0)||x(n)のy(n)==1
        x(2)から,xのy(0)||y(n)を除く． x(y)=[(x-1)(y-1)]+[(x-1)(y)]
        例えば x(5)y(2)=[(x-1)4(y-1)1]+[(x-1)4(y)2] ==>[x(4)y(1)]+[x(4)y(2)]==>1+4=5 
        */

		//xとyの関係を分かれば、まず次元配列を使う，x+yは数字のインデックスをみなす．
		//LV10のパスカルの三⾓形ので，その行列の極値は10
		int yh[][] = new int[10][10];
		//規律で、ｙの第一列と最後の列は数字「１」．そのため、ｙの第一列と最後の列の値を定義
		//ｙのインデックスを確定、そのインデックスに値を定義する
		for (int x = 0; x < yh.length; x++) {
			//これはｙ(うちの配列)の第一列のインデックス
			yh[x][0] = 1;
			//これはｙの最後のインデックス
			yh[x][x] = 1;
		}
		//今はfor循環を使って、各要素の値を求める(あげる)
		//第三行から、規律が適用されるので、ここでのｘは第三行から(インデックスは２)循環を始まる
		for (int x = 2; x < yh.length; x++) {
			//内の循環は，ｙの第一列と最後の列の値が知っているので，「０」インデックスの値と最後の列
			//のインデックスの値はここに入れない．
			for (int y = 1; y <= x - 1; y++) {
				//今は規律によって、ｘとｙのインデックスに相応しい値を計算（定義する）
				
				yh[x][y] = yh[x - 1][y - 1] + yh[x - 1][y];
			}
		}
        //今は次元配列の各要素の値を呼び出し
		//まずこの配列の各組のインデックスを求める
		for (int x = 0; x < yh.length; x++) {
			//次は各組の要素の値を求める
			//ここで、もしｙ<yh[x].length ==> 実際はy<9を循環したら，つまり，ｙ>ｘのときに[0]を出力する．
			//なぜなら、この規律で、各要素の値を定義するときに、先の内の循環でｙ(n)>x(n)の場面がない．
			//その場面がないから、yの(n)>xの(n)のインデックスにの値が定義しなかった．
			for (int y = 0; y <= x; y++) {
				//これは内の循環を都度出力したの内容"ln"を使わず横に出力した
				System.out.print(yh[x][y] + "\t");
			}
			//これは整体の循環を（うちの循環と外の循環）都度出力した内容．このときに(ln)を加えて
			System.out.println();
		}
	}
}
